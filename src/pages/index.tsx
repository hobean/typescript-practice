import Head from "next/head";

export default function Home() {
  let 이름: string | number = "Kim";
  let 이름2: string[] = ["kim", "park"];
  let 이름3: { name?: string } = {};
  let 이름4: string | number = "kim";

  type Name = string | number;

  function 함수(x: number): number {
    return x * 2;
  }

  // type Member = [number, boolean];
  // let john: Member = [123, true];

  type Member = {
    [key: string]: string; // 문자로 들어오는 모든 속성은 string 값을 가짐
  };

  let john: Member = { name: "kim" };

  // class User {
  //   name: string;
  //   constructor(name: string) {
  //     this.name = name;
  //   }
  // }

  type Score = "A" | "B" | "C" | "D";
  interface User {
    name: string;
    age: number;
    gender?: string;
    readonly birthYear: number;
    [grade: number]: Score; // [key: number]: string
  }

  let user: User = {
    name: "xx",
    age: 30,
    birthYear: 2000,
    1: "A",
  };

  user.age = 10;

  // interface
  interface Add {
    (num1: number, num2: number): number;
  }

  const add: Add = function (x, y) {
    return x + y;
  };

  add(10, 20);

  interface IsAdult {
    (age: number): boolean;
  }

  const a: IsAdult = (age) => {
    return age > 19;
  };

  interface Car {
    color: string;
    wheels: number;
    start(): void;
  }

  class Bmw implements Car {
    color;
    wheels = 4;
    constructor(c: string) {
      this.color = c;
    }
    start() {
      console.log("go...");
    }
  }

  const b = new Bmw("green");

  console.log(b);
  b.start();
  return (
    <>
      <Head>
        <title>typeScript Practice</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main></main>
    </>
  );
}
